<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>APIM_1_10_X_MIGRATION_H2_ORACLE</Name>
<Script>

  <!--create temp table for throttle out summary table in RDBMS-->
  create temporary table APIThrottleSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_THROTTLED_OUT_SUMMARY");

  <!--create table for throttle out summary in DAL-->
  CREATE TEMPORARY TABLE THROTTLED_OUT_FINAL_SUMMARY USING CarbonAnalytics OPTIONS (tableName "API_THROTTLED_OUT_SUMMARY",
    schema "api string -i,
    api_version string -i,
    context string -i,
    apiPublisher string -i,
    applicationName string -i,
    tenantDomain string -i,
    year int -i,
    month int -i,
    day int -i,
    week int -i,
    time string -i,
    success_request_count int -i,
    throttleout_count int -i,
    max_request_time long -i,
    api_year_month_week_day_facet facet -i,
    applicationName_facet facet -i",
    primaryKeys "api,api_version,context,apiPublisher,applicationName,tenantDomain,year,month,day"
  );

  <!--inserting API throttle out summary data to DAL from RDBMS-->
  insert into table THROTTLED_OUT_FINAL_SUMMARY select
  API,API_VERSION,CONTEXT,APIPUBLISHER,APPLICATIONNAME,TENANTDOMAIN,YEAR,MONTH,
  DAY,FIRST(WEEK),FIRST(TIME),SUM(SUCCESS_REQUEST_COUNT),SUM(THROTTLEOUT_COUNT),
  COALESCE(MAX(timestamp(TIME)),0), facet5(API,YEAR,MONTH,FIRST(WEEK),DAY),
  APPLICATIONNAME from APIThrottleSummaryData GROUP BY API,API_VERSION,CONTEXT,APIPUBLISHER,APPLICATIONNAME,TENANTDOMAIN,YEAR,MONTH,DAY;


  <!--create table for request summary in DAL-->
  CREATE TEMPORARY TABLE API_REQUEST_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_REQUEST_SUMMARY",
  schema "api string -i,
  api_version string -i,
  version string -i,
  apiPublisher string -i,
  consumerKey string -i,
  userId string -i,
  context string -i,
  max_request_time long -i,
  total_request_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  key_api_facet facet -i,
  key_userId_facet facet -i,
  api_version_userId_facet facet -i,
  api_version_userId_apiPublisher_facet facet -i,
  api_version_userId_context_facet facet -i",
  primaryKeys "api,api_version,version,apiPublisher,consumerKey,userId,context,hostName,year,month,day"
  );

  <!--create temp table for request summary table in RDBMS-->
  create temporary table APIRequestSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_REQUEST_SUMMARY");

  <!--inserting request summary data in RDBMS to DAL-->
  insert into table API_REQUEST_SUMMARY_FINAL select API, API_VERSION,VERSION, APIPUBLISHER,
  COALESCE(CONSUMERKEY,'-'),
  USERID,
  CONTEXT,
  MAX(MAX_REQUEST_TIME),
  SUM(TOTAL_REQUEST_COUNT),
  HOSTNAME,
  YEAR,
  MONTH,
  DAY,
  MAX(TIME),
  facet2(CONSUMERKEY,API),
  facet2(CONSUMERKEY,USERID),
  facet3(API,VERSION,USERID),
  facet4(API,VERSION,USERID,APIPUBLISHER),
  facet4(API,VERSION,USERID,CONTEXT)
  from APIRequestSummaryData GROUP BY API, API_VERSION,VERSION, APIPUBLISHER,CONSUMERKEY,USERID,CONTEXT,HOSTNAME,YEAR,MONTH,DAY;


  <!--create temp table for API version usage summary table in RDBMS-->
  create temporary table APIVersionUsageSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_VERSION_USAGE_SUMMARY");

  <!--create table for API Version usage summary in DAL-->
  CREATE TEMPORARY TABLE API_VERSION_USAGE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_VERSION_USAGE_SUMMARY",
  schema "api string -i,
  version string -i,
  apiPublisher string -i,
  context string -i,
  total_request_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  api_version_context_facet facet -i",
  primaryKeys "api,version,apiPublisher,context,hostName,year,month,day"
  );

  <!--inserting api version usage summary data in RDBMS to DAL-->
  insert into table API_VERSION_USAGE_SUMMARY_FINAL select API,VERSION,APIPUBLISHER,CONTEXT,SUM(TOTAL_REQUEST_COUNT),HOSTNAME,
  YEAR,  MONTH,  DAY,  MAX(TIME),  timestamp(MAX(TIME)),
  facet3(API,VERSION,CONTEXT)
  from APIVersionUsageSummaryData GROUP BY API,VERSION,APIPUBLISHER,CONTEXT,HOSTNAME,YEAR,MONTH,DAY;


  <!--create temp table for API resource usage summary table in RDBMS-->
  create temporary table APIResourcePathUsageSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_Resource_USAGE_SUMMARY");

  <!--create table for API resource summary in DAL-->
  CREATE TEMPORARY TABLE API_Resource_USAGE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_Resource_USAGE_SUMMARY",
  schema "api string -i,
  version string -i,
  apiPublisher string -i,
  consumerKey string -i,
  resourcePath string -i,
  context string -i,
  method string -i,
  total_request_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  key_api_method_path_facet facet -i,
  api_version_context_method_facet facet -i",
  primaryKeys "api,version,apiPublisher,consumerKey,context,resourcePath,method,hostName,year,month,day"
  );

  <!--inserting resource usage summary data in RDBMS to DAL-->
  insert into table API_Resource_USAGE_SUMMARY_FINAL select
  API,VERSION,APIPUBLISHER,COALESCE(CONSUMERKEY,'-'),
  RESOURCEPATH,CONTEXT,METHOD,SUM(TOTAL_REQUEST_COUNT),HOSTNAME,
  YEAR,  MONTH,  DAY,  MAX(TIME),
  timestamp(MAX(TIME)),
  facet4(CONSUMERKEY, API, METHOD, RESOURCEPATH),
  facet4(API, VERSION, CONTEXT, METHOD)
  from APIResourcePathUsageSummaryData GROUP BY API,VERSION,APIPUBLISHER,CONSUMERKEY,RESOURCEPATH,CONTEXT,METHOD,HOSTNAME,YEAR,MONTH,DAY;


  <!--create temp table for response summary table in RDBMS-->
  create temporary table APIResponseSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_RESPONSE_SUMMARY");

  <!--create table for response summary in DAL-->
  CREATE TEMPORARY TABLE API_RESPONSE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_RESPONSE_SUMMARY",
  schema "api_version string -i,
  apiPublisher string -i,
  context string -i,
  serviceTime int -i,
  total_response_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  api_version_context_facet facet -i",
  primaryKeys "api,version,apiPublisher,context,hostName,year,month,day"
  );

  <!--inserting response summary data in RDBMS to DAL-->
  insert into table API_RESPONSE_SUMMARY_FINAL select
  API_VERSION,  COALESCE(APIPUBLISHER,'-'),  CONTEXT,  SUM(SERVICETIME),  SUM(TOTAL_RESPONSE_COUNT),
  HOSTNAME,  YEAR,  MONTH,  DAY,  MAX(TIME),  timestamp(MAX(TIME)),
  facet2(API_VERSION, CONTEXT)
  from APIResponseSummaryData GROUP BY API_VERSION,APIPUBLISHER,CONTEXT,HOSTNAME,YEAR,MONTH,DAY;


  <!--create temp table for fault summary table in RDBMS-->
  create temporary table APIFaultSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_FAULT_SUMMARY");

  <!--create table for fault summary in DAL-->
  CREATE TEMPORARY TABLE API_FAULT_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_FAULT_SUMMARY",
  schema "api string -i,
  version string -i,
  apiPublisher string -i,
  consumerKey string -i,
  context string -i,
  total_fault_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  consumerKey_api_facet facet -i,
  api_version_apiPublisher_context_facet facet -i",
  primaryKeys "api,version,apiPublisher,consumerKey,context,hostName,year,month,day"
  );

  <!--inserting fault summary data in RDBMS to DAL-->
  insert into table API_FAULT_SUMMARY_FINAL select
  API,VERSION,APIPUBLISHER,COALESCE(CONSUMERKEY,'-'),CONTEXT,  SUM(TOTAL_FAULT_COUNT),
  HOSTNAME,YEAR,  MONTH,  DAY,  MAX(TIME), timestamp(MAX(TIME)),
  facet2(CONSUMERKEY, API),
  facet4(API, VERSION, APIPUBLISHER, CONTEXT)
  from APIFaultSummaryData GROUP BY API,VERSION,APIPUBLISHER,CONSUMERKEY,CONTEXT,HOSTNAME,YEAR,MONTH,DAY;


  <!--create temp table for destination summary table in RDBMS-->
  create temporary table APIDestinationDataSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_DESTINATION_SUMMARY");

  <!--create table for destination summary in DAL-->
  CREATE TEMPORARY TABLE API_DESTINATION_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_DESTINATION_SUMMARY",
  schema "api string -i,
  version string -i,
  apiPublisher string -i,
  context string -i,
  destination string -i,
  total_request_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  api_version_context_dest_facet facet -i",
  primaryKeys "api,version,apiPublisher,context,destination,hostName,year,month,day"
  );

  <!--inserting destination summary data in RDBMS to DAL -->
  insert into table API_DESTINATION_SUMMARY_FINAL select
  API,VERSION,APIPUBLISHER, CONTEXT,COALESCE(DESTINATION,'-'),SUM(TOTAL_REQUEST_COUNT),HOSTNAME,
  YEAR,  MONTH,  DAY,  MAX(TIME), timestamp(MAX(TIME)),
  facet4(API, VERSION, CONTEXT, COALESCE(DESTINATION,'-'))
  from APIDestinationDataSummaryData GROUP BY API,VERSION,APIPUBLISHER,CONTEXT,DESTINATION,HOSTNAME,YEAR,MONTH,DAY;
                                                                                                                                                        
</Script>
   
</Analytics>
